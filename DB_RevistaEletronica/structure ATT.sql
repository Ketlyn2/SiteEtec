CREATE DATABASE IF NOT EXISTS REVISTAELETRONICA;

USE REVISTAELETRONICA;

CREATE TABLE IF NOT EXISTS TB_USUARIO
(
TB_USER_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
TB_USER_NOME VARCHAR(64) NOT NULL,
TB_USER_EMAIL VARCHAR(128) NOT NULL,
TB_USER_SENHA VARCHAR(32) NOT NULL 
);

CREATE TABLE IF NOT EXISTS TB_EVENTO
(
TB_EVENTO_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
TB_EVENTO_NOME VARCHAR(64) NOT NULL,
TB_EVENTO_DT DATE NOT NULL,
TB_EVENTO_DONO VARCHAR(128) NOT NULL,
TB_EVENTO_IMG BLOB NOT NULL,
TB_EVENTO_DESC VARCHAR(256) NOT NULL
);

 -- CADASTRAR USER 
DELIMITER $$
DROP PROCEDURE IF EXISTS CAD_USER;
CREATE PROCEDURE CAD_USER (IN CAD_NOME VARCHAR(64), IN CAD_EMAIL VARCHAR(128), IN CAD_SENHA VARCHAR(32))
BEGIN
SET @valida_user = (
SELECT COUNT(TB_USER_ID)
FROM TB_USUARIO
WHERE TB_USER_EMAIL = CAD_EMAIL 
);  
IF @valida_user = 0 THEN
INSERT INTO TB_USUARIO 
VALUES 
(
DEFAULT,
CAD_NOME,
CAD_EMAIL,
CAD_SENHA
);
SELECT '1' AS Mensagem;
ELSE
SELECT 'HÁ UM USUARIO COM ESTE EMAIL!' AS Mensagem;
END IF;
END$$
DELIMITER ;

CALL CAD_USER('Kety', 'kety@gmail.com', '123');

SELECT * FROM TB_USUARIO;

select tb_user_id from tb_usuario where tb_user_email = 'vs@gmail.com';

 -- CADASTRAR EVENTO
DELIMITER $$
DROP PROCEDURE IF EXISTS CAD_EVENTO;
CREATE PROCEDURE CAD_EVENTO (IN C_NOME VARCHAR(64), IN C_DATA DATE, IN C_DONO VARCHAR(128), IN C_IMG BLOB, IN C_DESC VARCHAR(256))
BEGIN
SET @CAD_EVE = (
SELECT COUNT(TB_USER_ID)
FROM TB_USUARIO
WHERE TB_USER_EMAIL = C_DONO
);
IF @CAD_EVE = 1 THEN
INSERT INTO TB_EVENTO
VALUES
(
DEFAULT,
C_NOME,
C_DATA,
C_DONO,
C_IMG,
C_DESC
);
SELECT '1' AS Mensagem;
ELSE
SELECT 'Não foi possivel efetuar o cadastro.' AS Mensagem;
END IF;
END$$
DELIMITER ;

SELECT * FROM TB_EVENTO;
 
SELECT * FROM TB_USUARIO WHERE TB_USER_EMAIL = 'vs@gmail.com' AND TB_USER_SENHA = '123';

SELECT TB_EVENTO_NOME FROM TB_EVENTO;

SELECT TB_EVENTO_IMG,
	   TB_EVENTO_DT,
	   TB_EVENTO_NOME,
       TB_EVENTO_DESC,
       TB_USER_NOME
FROM TB_EVENTO 
INNER JOIN TB_USUARIO 
ON TB_EVENTO.TB_EVENTO_DONO = TB_USUARIO.TB_USER_EMAIL;

SELECT TB_EVENTO_IMG
FROM TB_EVENTO
INNER JOIN TB_USUARIO 
ON TB_EVENTO.TB_EVENTO_DONO = TB_USUARIO.TB_USER_EMAIL;

 
